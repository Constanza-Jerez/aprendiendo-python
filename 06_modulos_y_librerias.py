# -------------------------------------------
# 06 - M√≥dulos y Librer√≠as en Python üì¶
# -------------------------------------------

# ¬øQu√© es un m√≥dulo?
# Un m√≥dulo es un archivo .py que contiene definiciones de funciones, clases o variables 
# que puedes reutilizar. Python incluye varios m√≥dulos est√°ndar (stdlib) que facilitan tareas 
# comunes sin tener que escribir c√≥digo desde cero. Adem√°s, existen librer√≠as de terceros 
# (instalables v√≠a pip) para funcionalidades m√°s especializadas.

# -------------------------------------------
# Ejemplo 1: M√≥dulo math
# Para operaciones matem√°ticas avanzadas (ra√≠z cuadrada, trigonometr√≠a, etc.).
import math

print("Ejemplo - m√≥dulo math:")
# Pi y e
print("Pi:", math.pi)
print("Euler (e):", math.e)

# Ra√≠z cuadrada
num = 25
print(f"Ra√≠z cuadrada de {num}:", math.sqrt(num))

# Potencia
print("2‚Å∏ =", math.pow(2, 8))

# Funci√≥n trigonom√©trica
√°ngulo_grados = 30
√°ngulo_radianes = math.radians(√°ngulo_grados)
print(f"Coseno de {√°ngulo_grados}¬∞:", math.cos(√°ngulo_radianes))

print("-" * 40)

# -------------------------------------------
# Ejemplo 2: M√≥dulo random
# Para generar n√∫meros aleatorios o elegir elementos al azar.
import random

print("Ejemplo - m√≥dulo random:")
# Entero aleatorio entre 1 y 10
aleatorio = random.randint(1, 10)
print("N√∫mero aleatorio entre 1 y 10:", aleatorio)

# Elegir un elemento al azar de una lista
colores = ["rojo", "verde", "azul", "amarillo"]
print("Color aleatorio:", random.choice(colores))

# Barajar una lista
cartas = ["A", "2", "3", "4", "5", "J", "Q", "K"]
random.shuffle(cartas)
print("Cartas barajadas:", cartas)

# Generar una muestra sin reemplazo
muestra = random.sample(range(1, 50), 6)  # similar a sorteo de loter√≠a
print("N√∫meros de muestra (lotto):", muestra)

print("-" * 40)

# -------------------------------------------
# Ejemplo 3: M√≥dulo datetime
# Para manejar fechas y horas.
from datetime import datetime, timedelta

print("Ejemplo - m√≥dulo datetime:")
ahora = datetime.now()
print("Fecha y hora actuales:", ahora)

# Crear una fecha espec√≠fica
fecha_evento = datetime(2025, 6, 15, 14, 30)  # 15 de junio de 2025 a las 14:30
print("Fecha de evento:", fecha_evento)

# Formatear fecha a cadena
print("Formato dd/mm/yyyy:", ahora.strftime("%d/%m/%Y"))
print("Formato dd-mm-yyyy HH:MM:", ahora.strftime("%d-%m-%Y %H:%M"))

# Operaciones con fechas (timedelta)
ma√±ana = ahora + timedelta(days=1)
ayer = ahora - timedelta(days=1)
print("Ma√±ana ser√°:", ma√±ana.strftime("%d/%m/%Y"))
print("Ayer fue:", ayer.strftime("%d/%m/%Y"))

print("-" * 40)

# -------------------------------------------
# Ejemplo 4: M√≥dulo os
# Para interactuar con el sistema de archivos y entorno.
import os

print("Ejemplo - m√≥dulo os:")
# Obtener directorio actual
directorio_actual = os.getcwd()
print("Directorio de trabajo actual:", directorio_actual)

# Listar archivos y carpetas en un directorio
contenido = os.listdir(directorio_actual)
print("Contenido de este directorio:")
for elemento in contenido:
    print("  -", elemento)

# Crear un directorio (si no existe)
nueva_carpeta = "carpeta_ejemplo"
if not os.path.exists(nueva_carpeta):
    os.mkdir(nueva_carpeta)
    print(f"Se cre√≥ la carpeta '{nueva_carpeta}'")
else:
    print(f"La carpeta '{nueva_carpeta}' ya existe")

# Eliminar la carpeta creada (comentar si deseas conservarla)
# os.rmdir(nueva_carpeta)
# print(f"Se elimin√≥ la carpeta '{nueva_carpeta}'")

print("-" * 40)

# -------------------------------------------
# Ejemplo 5: M√≥dulo sys
# Para acceder a par√°metros de l√≠nea de comandos y entorno de ejecuci√≥n.
import sys

print("Ejemplo - m√≥dulo sys:")
# Argumentos pasados al script (sys.argv[0] es el nombre del archivo .py)
print("Argumentos de la l√≠nea de comandos:", sys.argv)

# Versi√≥n de Python
print("Versi√≥n de Python:", sys.version)

# Ruta donde busca m√≥dulos instalados
print("Rutas de b√∫squeda de m√≥dulos:")
for ruta in sys.path:
    print("  -", ruta)

print("-" * 40)

# -------------------------------------------
# Ejemplo 6: M√≥dulo json
# Para serializar y deserializar datos en formato JSON.
import json

print("Ejemplo - m√≥dulo json:")
# Diccionario de Python
data = {
    "nombre": "Cony",
    "edad": 35,
    "lenguajes": ["Python", "SQL", "Power BI"]
}

# Convertir dict a string JSON
json_str = json.dumps(data, indent=4, ensure_ascii=False)
print("JSON generado:")
print(json_str)

# Convertir string JSON a dict de Python
python_obj = json.loads(json_str)
print("Python objeto desde JSON:", python_obj)
print("Accediendo a 'nombre':", python_obj["nombre"])

print("-" * 40)

# -------------------------------------------
# Ejemplo 7: Librer√≠a de terceros requests (HTTP)
# Para hacer peticiones HTTP (GET, POST, etc.).
# Nota: debes instalar requests antes: pip install requests
try:
    import requests
    print("Ejemplo - librer√≠a requests:")
    respuesta = requests.get("https://api.github.com")
    print("C√≥digo de estado:", respuesta.status_code)
    # Mostrar las primeras 200 caracteres de la respuesta JSON
    print("Contenido (JSON):", respuesta.text[:200], "...")
except ImportError:
    print("La librer√≠a 'requests' no est√° instalada. Inst√°lala con: pip install requests")

print("-" * 40)
